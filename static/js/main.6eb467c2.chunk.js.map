{"version":3,"sources":["components/RomanticComedy/RomanticComedyList.js","reducers/romanticComedy/romanticComedyReducer.js","components/common/NavBar.jsx","components/RomanticComedy/RomanticComedy.js","App.js","reducers/root/rootReducer.js","reducers/romanticComedy/romanticComedySaga.js","reducers/root/rootSaga.js","config/store.js","serviceWorker.js","index.js"],"names":["RomanticComedyList","_this","this","window","addEventListener","props","page","innerHeight","Math","round","document","documentElement","scrollTop","scrollingElement","scrollHeight","console","log","fetchMoreData","react_default","a","createElement","style","width","margin","display","Grid","container","spacing","ref","comedyList","length","map","item","index","md","sm","xs","key","src","process","maxWidth","height","alt","Typography","gutterBottom","variant","component","textAlign","color","fontSize","name","Component","fetchRComedyRequest","createAction","fetchRComedySuccess","fetchRComedyFailure","handleActions","_handleActions","Object","defineProperty","state","_ref","payload","comedyData","data","comedies","concat","update","$set","_ref2","error","useStyles","makeStyles","theme","root","flexGrow","position","top","left","menuButton","marginRight","title","breakpoints","up","input","marginLeft","flex","padding","iconButton","navBar","backgroundColor","NavBar","classes","_useState","useState","_useState2","slicedToArray","search","setSearch","className","AppBar","Toolbar","ArrowBack_default","noWrap","InputBase","onChange","event","target","value","IconButton","type","aria-label","onClick","onSearch","Search_default","RomanticComedy","onFetchRComedy","callback","err","res","setState","handleSearch","_this2","Fragment","common_NavBar","Container","marginTop","RomanticComedy_RomanticComedyList","connect","romanticComedy","App","components_RomanticComedy_RomanticComedy","rootReducer","combineReducers","romanticComedyReducer","fetchRComedyWorker","romanticComedySaga","regenerator_default","wrap","_context","prev","next","t0","page1Data","content","filter","abrupt","page2Data","page3Data","put","t1","message","stop","_marked","_context2","all","takeEvery","_marked2","rootSaga","rootSaga_marked","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","middleware","store","createStore","applyMiddleware","apply","run","Boolean","location","hostname","match","ReactDOM","render","es","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"47GAiCeA,8LA5BS,IAAAC,EAAAC,KAChBC,OAAOC,iBAAiB,SAAU,WAC1BH,EAAKI,MAAMC,MAAQ,GAAKH,OAAOI,YAAcC,KAAKC,MAAMC,SAASC,gBAAgBC,aAAeF,SAASG,iBAAiBC,eAC1HC,QAAQC,IAAI,iBAAkBf,EAAKI,MAAMC,MACzCL,EAAKI,MAAMY,oDAMnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,OAAQC,QAAS,SACjDN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,IAAI,cAC3B1B,KAAKG,MAAMwB,YAAc3B,KAAKG,MAAMwB,WAAWC,OAAS,EACrD5B,KAAKG,MAAMwB,WAAWE,IAAI,SAACC,EAAMC,GAAP,OACtBf,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMO,MAAI,EAACE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAKJ,GACjCf,EAAAC,EAAAC,cAAA,OAAKkB,IAAKC,wBAAsCP,EAAK,gBAAiBX,MAAO,CAAEmB,SAAU,OAAQlB,MAAO,OAAQmB,OAAQ,QAAUC,IAAK,UACvIxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAKzB,MAAO,CAAE0B,UAAW,SAAUC,MAAO,OAAQC,SAAU,SACvGjB,EAAKkB,SAGb,yBAvBIC,gECEpBC,EAAsBC,YAAa,yBACnCC,EAAsBD,YAAa,yBACnCE,EAAsBF,YAAa,yBAQjCG,eAAaC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EACvBL,EAAsB,SAAAQ,GAAK,OAAIA,IADRF,OAAAC,EAAA,EAAAD,CAAAD,EAEvBH,EAAsB,SAACM,EAADC,GAAwB,IAAdC,EAAcD,EAAdC,QACzBC,EAAa,GACI,IAAjBD,EAAQxD,KACRyD,EAAaD,EAAQE,KAGrBD,EADiBH,EAAMK,SACDC,OAAOJ,EAAQE,MAEzC,OAAOG,IAAOP,EAAO,CACjBK,SAAU,CAAEG,KAAML,OAXFL,OAAAC,EAAA,EAAAD,CAAAD,EAcvBF,EAAsB,SAACK,EAADS,GAAA,IAAUP,EAAVO,EAAUP,QAAV,OACnBK,IAAOP,EAAO,CACVU,MAAO,CAAEF,KAAMN,OAhBCL,GALP,CACjBQ,SAAU,GACVK,MAAO,8FCDLC,EAAYC,YAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,EACVC,SAAU,mBACVtD,MAAO,OACPuD,IAAK,EACLC,KAAM,GAEVC,WAAY,CACRC,YAAaP,EAAM9C,QAAQ,IAE/BsD,MAAMvB,OAAAC,EAAA,EAAAD,CAAA,CACFiB,SAAU,EACVnD,QAAS,SACRiD,EAAMS,YAAYC,GAAG,MAAQ,CAC1B3D,QAAS,UAGjB4D,MAAO,CACHC,WAAYZ,EAAM9C,QAAQ,GAC1B2D,KAAM,EACNtC,MAAO,OAEPuC,QAAS,UAEbC,WAAY,CACRD,QAAS,GACTvC,MAAO,QAEXyC,OAAQ,CACJC,gBAAiB,WA+BVC,EA3BA,SAACtF,GAEZ,IAAMuF,EAAUrB,IAFMsB,EAGMC,mBAAS,IAHfC,EAAArC,OAAAsC,EAAA,EAAAtC,CAAAmC,EAAA,GAGfI,EAHeF,EAAA,GAGPG,EAHOH,EAAA,GAKtB,OACI7E,EAAAC,EAAAC,cAAA,OAAK+E,UAAWP,EAAQlB,MACpBxD,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAQxB,SAAS,SAASuB,UAAWP,EAAQH,QACzCvE,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACInF,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,MACAD,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAYwD,UAAWP,EAAQX,MAAOpC,QAAQ,KAAK0D,QAAM,GAAzD,mBAGArF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACIL,UAAWP,EAAQR,MACnBqB,SAAU,SAACC,GAAD,OAAWR,EAAUQ,EAAMC,OAAOC,UAEhD1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAYC,KAAK,SAASX,UAAWP,EAAQJ,WAAYuB,aAAW,SAASC,QAAS,kBAAM3G,EAAM4G,SAAShB,KACvG/E,EAAAC,EAAAC,cAAC8F,EAAA/F,EAAD,oBCxDlBgG,6MACFvD,MAAQ,CACJtD,KAAM,EACN2F,OAAQ,MAWZhF,cAAgB,WACZhB,EAAKI,MAAM+G,eAAe,CACtB9G,KAAML,EAAK2D,MAAMtD,KAAM2F,OAAQhG,EAAK2D,MAAMqC,OAAQoB,SAAU,SAACC,EAAKC,GAC1DA,GACAtH,EAAKuH,SAAS,CAAElH,KAAML,EAAK2D,MAAMtD,KAAO,UAMxDmH,aAAe,SAACxB,GACZhG,EAAKuH,SAAS,CAAEvB,OAAQA,GAAU,WAC9BhG,EAAKI,MAAM+G,eAAe,CACtB9G,KAAM,EAAG2F,OAAQA,EAAQoB,SAAU,SAACC,EAAKC,GACjCA,GACAtH,EAAKuH,SAAS,CAAElH,KAAML,EAAK2D,MAAMtD,KAAO,6FAxBxC,IAAAoH,EAAAxH,KAChBA,KAAKG,MAAM+G,eAAe,CACtB9G,KAAM,EAAG+G,SAAU,SAACC,EAAKC,GACjBA,GACAG,EAAKF,SAAS,CAAElH,KAAMoH,EAAK9D,MAAMtD,KAAO,wCA4BpD,OACIY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwG,SAAA,KACIzG,EAAAC,EAAAC,cAACwG,EAAD,CAAQX,SAAU/G,KAAKuH,eACvBvG,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAWxG,MAAO,CAAEyG,UAAW,KAC3B5G,EAAAC,EAAAC,cAAC2G,EAAD,CAAoBlG,WAAY3B,KAAKG,MAAM4D,SAAUhD,cAAef,KAAKe,cAAeX,KAAMJ,KAAK0D,MAAMtD,iBA1CpG6C,aAmDd6E,cACX,SAAApE,GAAK,MAAK,CACNK,SAAUL,EAAMqE,eAAehE,WAEnC,CACImD,eAAgBhE,GALT4E,CAObb,GCtDae,MARf,WACE,OACEhH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAwG,SAAA,KACEzG,EAAAC,EAAAC,cAAC+G,EAAD,wBCDOC,EAAcC,YAAgB,CACzCJ,eAAgBK,gECORC,cA6COC,IA7CjB,SAAUD,EAAV1E,GAAA,IAAAC,EAAAxD,EAAA2F,EAAAoB,EAAArD,EAAA,OAAAyE,EAAAtH,EAAAuH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA+B/E,EAA/BD,EAA+BC,QACnBxD,EAA2BwD,EAA3BxD,KAAM2F,EAAqBnC,EAArBmC,OAAQoB,EAAavD,EAAbuD,SACtBtG,QAAQC,IAAI,UAAWV,GACvBS,QAAQC,IAAI,YAAaiF,GAH7B0C,EAAAC,KAAA,EAKY5E,EAAO,KALnB2E,EAAAG,GAMgBxI,EANhBqI,EAAAE,KAOiB,IAPjBF,EAAAG,GAAA,EAciB,IAdjBH,EAAAG,GAAA,GAqBiB,IArBjBH,EAAAG,GAAA,0BASoB9E,EADAiC,EACO8C,EAAUzI,KAAK,iBAAiB0I,QAAQC,OAAO,SAAAjH,GAAI,OAAIA,EAAKkB,OAAS+C,IAErE8C,EAAUzI,KAAK,iBAAiB0I,QAX3DL,EAAAO,OAAA,2BAgBoBlF,EADAiC,EACOkD,EAAU7I,KAAK,iBAAiB0I,QAAQC,OAAO,SAAAjH,GAAI,OAAIA,EAAKkB,OAAS+C,IAErEkD,EAAU7I,KAAK,iBAAiB0I,QAlB3DL,EAAAO,OAAA,2BAuBoBlF,EADAiC,EACOmD,EAAU9I,KAAK,iBAAiB0I,QAAQC,OAAO,SAAAjH,GAAI,OAAIA,EAAKkB,OAAS+C,IAErEmD,EAAU9I,KAAK,iBAAiB0I,QAE3CjI,QAAQC,IAAI,iBAAkBgD,GA3B9C2E,EAAAO,OAAA,2BA+BoBlF,EADAiC,EACO8C,EAAUzI,KAAK,iBAAiB0I,QAAQC,OAAO,SAAAjH,GAAI,OAAIA,EAAKkB,OAAS+C,IAErE8C,EAAUzI,KAAK,iBAAiB0I,QAjC3DL,EAAAO,OAAA,oBAsCQ,OADI7B,GAAUA,EAAS,KAAMrD,GArCrC2E,EAAAE,KAAA,GAsCcQ,YAAI/F,EAAoB,CAACU,OAAM1D,UAtC7C,QAAAqI,EAAAE,KAAA,iBAyCQ,OAzCRF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAwCYtB,GAAUA,EAASsB,EAAAW,GAAIC,QAAS,MAxC5CZ,EAAAE,KAAA,GAyCcQ,YAAI9F,EAAmBoF,EAAAW,KAzCrC,yBAAAX,EAAAa,SAAAC,EAAA,eA6CO,SAAUjB,KAAV,OAAAC,EAAAtH,EAAAuH,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACH,OADGa,EAAAb,KAAA,EACGc,YAAI,CACNC,YAAUxG,EAAqBmF,KAFhC,wBAAAmB,EAAAF,SAAAK,mBCrDUC,IAAV,SAAUA,KAAV,OAAArB,EAAAtH,EAAAuH,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACH,OADGF,EAAAE,KAAA,EACGc,YAAI,CAACnB,OADR,wBAAAG,EAAAa,SAAAO,ICCP,IAAIC,GAAmBC,IAOvB,IAAMC,GAAiBC,cAEjBC,GAAa,CAACF,IAEdG,GAAQC,YAAYlC,EAAa4B,GAAiBO,IAAeC,WAAf,EAAmBJ,MAE3EF,GAAeO,IAAIX,IAEJO,UCTKK,QACW,cAA7BvK,OAAOwK,SAASC,UAEe,UAA7BzK,OAAOwK,SAASC,UAEhBzK,OAAOwK,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP7J,EAAAC,EAAAC,cAAC4J,EAAA,EAAD,CAAUX,MAAOA,IACfnJ,EAAAC,EAAAC,cAAC6J,EAAD,OAEFvK,SAASwK,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,KAAK,SAAAC,GACJA,EAAaC,eAEdC,MAAM,SAAAnH,GACLvD,QAAQuD,MAAMA,EAAMiF","file":"static/js/main.6eb467c2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nclass RomanticComedyList extends Component {\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', () => {\r\n            if (this.props.page <= 3 && window.innerHeight + Math.round(document.documentElement.scrollTop) === document.scrollingElement.scrollHeight) {\r\n                console.log(\"page is.......\", this.props.page)\r\n                this.props.fetchMoreData();\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"80%\", margin: \"auto\", display: \"flex\" }}>\r\n                <Grid container spacing={3} ref=\"listScroll\">\r\n                    {this.props.comedyList && this.props.comedyList.length > 0 ?\r\n                        this.props.comedyList.map((item, index) => (\r\n                            <Grid item md={4} sm={4} xs={4} key={index}>\r\n                                <img src={process.env.PUBLIC_URL + '/Slices/' + item[\"poster-image\"]} style={{ maxWidth: \"100%\", width: \"100%\", height: \"auto\" }} alt={\"hello\"} />\r\n                                <Typography gutterBottom variant=\"h5\" component=\"h5\" style={{ textAlign: \"center\", color: \"gray\", fontSize: \"1rem\" }}>\r\n                                    {item.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                        )) : \"No Data Found\"}\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RomanticComedyList;","import { createAction, handleActions } from 'redux-actions';\r\nimport update from 'immutability-helper';\r\n\r\n\r\n/*********************************************************************************/\r\nexport const fetchRComedyRequest = createAction('FETCH_RCOMEDY_REQUEST');\r\nexport const fetchRComedySuccess = createAction('FETCH_RCOMEDY_SUCCESS');\r\nexport const fetchRComedyFailure = createAction('FETCH_RCOMEDY_FAILURE');\r\n\r\n\r\nconst initialState = {\r\n    comedies: [],\r\n    error: null\r\n};\r\n\r\nexport default handleActions({\r\n    [fetchRComedyRequest]: state => state,\r\n    [fetchRComedySuccess]: (state, { payload }) => {\r\n        let comedyData = [];\r\n        if (payload.page === 1) {\r\n            comedyData = payload.data;\r\n        } else {\r\n            const comedies = state.comedies;\r\n            comedyData = comedies.concat(payload.data);\r\n        }\r\n        return update(state, {\r\n            comedies: { $set: comedyData }\r\n        })\r\n    },\r\n    [fetchRComedyFailure]: (state, { payload }) =>\r\n        update(state, {\r\n            error: { $set: payload },\r\n\r\n        })\r\n},\r\n    initialState\r\n);\r\n\r\n\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { useState } from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        position: \"fixed !important\",\r\n        width: \"100%\",\r\n        top: 0,\r\n        left: 0\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n        color: \"#FFF\",\r\n        // border: \"1px solid #332e2e\",\r\n        padding: \"0 10px\"\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n        color: \"#FFF\"\r\n    },\r\n    navBar: {\r\n        backgroundColor: \"#000\"\r\n    }\r\n}));\r\n\r\nconst NavBar = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const [search, setSearch] = useState(\"\")\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className={classes.navBar}>\r\n                <Toolbar>\r\n                    <ArrowBackIcon />\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        Romantic Comedy\r\n                    </Typography>\r\n                    <InputBase\r\n                        className={classes.input}\r\n                        onChange={(event) => setSearch(event.target.value)}\r\n                    />\r\n                    <IconButton type=\"button\" className={classes.iconButton} aria-label=\"search\" onClick={() => props.onSearch(search)} >\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default NavBar; ","import React, { Component } from \"react\";\r\nimport RomanticComedyList from \"./RomanticComedyList\";\r\nimport { connect } from 'react-redux';\r\nimport { fetchRComedyRequest } from \"../../reducers/romanticComedy/romanticComedyReducer\";\r\nimport NavBar from \"../common/NavBar\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nclass RomanticComedy extends Component {\r\n    state = {\r\n        page: 1,\r\n        search: \"\"\r\n    }\r\n    componentDidMount() {\r\n        this.props.onFetchRComedy({\r\n            page: 1, callback: (err, res) => {\r\n                if (res) {\r\n                    this.setState({ page: this.state.page + 1 });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    fetchMoreData = () => {\r\n        this.props.onFetchRComedy({\r\n            page: this.state.page, search: this.state.search, callback: (err, res) => {\r\n                if (res) {\r\n                    this.setState({ page: this.state.page + 1 });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSearch = (search) => {\r\n        this.setState({ search: search }, () => {\r\n            this.props.onFetchRComedy({\r\n                page: 1, search: search, callback: (err, res) => {\r\n                    if (res) {\r\n                        this.setState({ page: this.state.page + 1 });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavBar onSearch={this.handleSearch} />\r\n                <main>\r\n                    <Container style={{ marginTop: 70 }}>\r\n                        <RomanticComedyList comedyList={this.props.comedies} fetchMoreData={this.fetchMoreData} page={this.state.page} />\r\n                    </Container>\r\n                </main>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        comedies: state.romanticComedy.comedies\r\n    }),\r\n    {\r\n        onFetchRComedy: fetchRComedyRequest\r\n    }\r\n)(RomanticComedy);","import React from 'react';\r\nimport RomanticComedy from \"./components/RomanticComedy/RomanticComedy\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <RomanticComedy />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport romanticComedyReducer from '../romanticComedy/romanticComedyReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  romanticComedy: romanticComedyReducer\r\n});\r\n","import page1Data from \"../../API/CONTENTLISTINGPAGE-PAGE1.json\";\r\nimport page2Data from \"../../API/CONTENTLISTINGPAGE-PAGE2.json\";\r\nimport page3Data from \"../../API/CONTENTLISTINGPAGE-PAGE3.json\";\r\nimport { put, all, takeEvery } from 'redux-saga/effects';\r\n\r\n\r\nimport {\r\n    fetchRComedyRequest,\r\n    fetchRComedySuccess,\r\n    fetchRComedyFailure\r\n} from './romanticComedyReducer';\r\n\r\n/**********************/\r\nfunction* fetchRComedyWorker({ payload }) {\r\n    const { page, search, callback } = payload;\r\n    console.log(\"page is\", page);\r\n    console.log(\"search is\", search);\r\n    try {\r\n        let data = null;\r\n        switch (page) {\r\n            case 1:\r\n                if (search) {\r\n                    data = page1Data.page[\"content-items\"].content.filter(item => item.name === search);\r\n                } else {\r\n                    data = page1Data.page[\"content-items\"].content;\r\n                }\r\n                break;\r\n            case 2:\r\n                if (search) {\r\n                    data = page2Data.page[\"content-items\"].content.filter(item => item.name === search)\r\n                } else {\r\n                    data = page2Data.page[\"content-items\"].content;\r\n                }\r\n                break;\r\n            case 3:\r\n                if (search) {\r\n                    data = page3Data.page[\"content-items\"].content.filter(item => item.name === search)\r\n                } else {\r\n                    data = page3Data.page[\"content-items\"].content;\r\n                }\r\n                console.log(\"data is.......\", data)\r\n                break;\r\n            default:\r\n                if (search) {\r\n                    data = page1Data.page[\"content-items\"].content.filter(item => item.name === search)\r\n                } else {\r\n                    data = page1Data.page[\"content-items\"].content;\r\n                }\r\n                break;\r\n        }\r\n        if (callback) callback(null, data);\r\n        yield put(fetchRComedySuccess({data, page}));\r\n    } catch (err) {\r\n        if (callback) callback(err.message, null);\r\n        yield put(fetchRComedyFailure(err));\r\n    }\r\n}\r\n\r\nexport function* romanticComedySaga() {\r\n    yield all([\r\n        takeEvery(fetchRComedyRequest, fetchRComedyWorker)\r\n    ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport { romanticComedySaga } from '../romanticComedy/romanticComedySaga';\r\n\r\n\r\nexport function* rootSaga() {\r\n    yield all([romanticComedySaga()]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { rootReducer } from '../reducers/root/rootReducer.js';\r\nimport { rootSaga } from '../reducers/root/rootSaga.js';\r\n\r\nlet composeEnhancers = compose;\r\n\r\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\r\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__)\r\n      composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({});\r\n  }\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middleware = [sagaMiddleware];\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './config/store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}